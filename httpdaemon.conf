; {} reference a core daemon setting, to insert { or } use `{ or `}, to insert ` use ``
; if } is not matched by a {, there's no need to escape it
; you can only dereference variables from the global scope

; the user under which the daemon should run
user = paullik

; the port on which the daemon will listen for incoming connections
port=8282

; address on which the daemon should listen for incoming connections
; Examples: 0.0.0.0, ::, ::1, 127.0.0.1, see: QHostAddress documentation for details
address = 0.0.0.0

; directory from where documents will be served to clients
; must be readable by the user the daemon runs as
; should end with a "/"
documentroot=/srv/http/

; directory where the daemon will look for plugins
; must be readbale by the user the daemon runs as
; should end with a "/"
pluginroot=/home/paullik/localhost/http-daemon/plugins/

; plugins section, the plugins listed here are the ones that may respond to requests
; the key is the name of the library and the value is the URL on which the plugin must respond to requests
; the library file must be located inside the pluginroot and must be readable by the user under which the daemon runs
[plugins]
libfileplugin.so=static_file
libsquareplugin.so=/square
libloginplugin.so=/login

; this cannot be set to / since the daemon cannot determine if the path following is to be served by a plugin or
; to be forwarded to the plugin as part of the request
libcgiplugin.so=/cgi

;[plugins]
;squareplugin.dll=/square
;loginplugin.dll=/login

; every plugin may have a configuration section of its own
; every plugin configuration section must appear after the [plugins] section
; the section name for a plugin must match the plugin's name without the "lib" prefix (linux only) and without any
; extension
[cgiplugin]
; the default filename of the file that should be invoked when no other file is specified
index-filename=index
; the "virtual" CGI dir as it appears in a client URL, this is used to make sure the correct element is
; replaced with the actual path when serving static files from the file plugin
virtual-cgi-dir={plugins/libcgiplugin.so}
;virtual-cgi-dir={plugins/cgiplugin.dll}
docroot={documentroot}
; name of the directory where the cgi scripts are found, must be readable by the user under which the daemon is run,
; must be located in documentroot, should NOT end with a "/"
cgi-dir=cgi-bin
; maximum time allowed for a script to run, in milliseconds, default value: 5000 ms
timeout=5000
; ext=cgi binary path (only executable name if in PATH)
; ext=* means that any script that has the extension "ext" will be invoked directly, it won't be passed as environment
; varible to another process
; ext=static_file means that the file is served as is by the file plugin
php=/usr/bin/php-cgi
pl=*
sh=*
js=static_file
min.js=static_file
css=static_file
min.css=static_file
jpg=static_file
png=static_file
svg=static_file
gif=static_file

[fileplugin]
docroot={documentroot}
chunksize=2048 ; maximum number of KB to be sent at once when serving a file, 2048 KB by default
